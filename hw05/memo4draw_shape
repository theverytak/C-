2016. 7. 22

 draw_shape관련 메모.


1. .cc 파일 7번째 줄 생성자안에서.
원래는 pictures_[i][j] = '.'; 이런식으로 초기화를 했는데 이러니까 당연하게도
segmentation fault가 났다. 그래서 pictures_.resize(row); 를 추가해서 우선
vector의 메모리를 정해놓은 다음에 '.'을 추가하는 방향으로 바꿨다.
참고로 Draw 함수 첫부분에서는 문제가 없는데(사실 컴파일 전이라서 없을 것으로 예상
하는 중) 그 이유는 pictures_.size() 이런 형식으로 for loop이 돌기 때문이다.

2. add rect를 했을 때 잘 add해도 error 출력하는 문제가 있었다. 알고보니 "==" 대신 "="
를 사용한 것 때문에 문제가 되었다. 항상 잘 확인하자.

3. 생각보다 어려운 것은 없었다. 대부분의 기능을 함수로 만드니까 더 쉬운 것 같다. 아직
구현하지 않은 함수도 입력과 출력을 확신할 수 있으니까 도움이 된다. 항상 만들기 전에 생각
을 먼저하고 계획을 짜고 하자. 함수의 이름을 명확하게 하는 것, 옆에 주석 몇줄 달아놓는것
(입력은 뭐고 안에서 어떤 동작을 하고 출력은 어떻게 나오는지에 대해)이 상당한 도움이 된다.

4. ostream& os라는 파라미터가 있는데 그냥 cout 대신 os라는 단어를 쓴 것밖에 차이가 없다.
예전 코드(bitbucket에 있는)를 봐도 그래서 아직은 잘 모르겠다. 모르는 것들에 추가해야겠다.

그에 대한 류갓갓의 답 :
ostream &을 쓰면 좋은 점이
Draw(cout)은 물론 가능하고
stringstream myStringStream;
d.Draw(myStringStream);
string output;
myStringStream >> output 처럼도 되고
ofstream myFileStream("output.txt");
d.Draw(myFileStream);
네트워크상의 다른 컴퓨터로도 보낼 수 있겠지!
